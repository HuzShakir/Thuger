[{"C:\\Users\\alias\\MERN\\frontend\\src\\index.js":"1","C:\\Users\\alias\\MERN\\frontend\\src\\App.js":"2","C:\\Users\\alias\\MERN\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\HomeScreen.js":"4","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Footer.js":"5","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Header.js":"6","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Product.js":"7","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Ratings.js":"8","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\alias\\MERN\\frontend\\src\\store.js":"10","C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\productReducer.js":"11","C:\\Users\\alias\\MERN\\frontend\\src\\constants\\productConstants.js":"12","C:\\Users\\alias\\MERN\\frontend\\src\\actions\\productAcions.js":"13","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Loader.js":"14","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Message.js":"15","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\CartScreen.js":"16","C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\cartReducer.js":"17","C:\\Users\\alias\\MERN\\frontend\\src\\constants\\cartConstants.js":"18","C:\\Users\\alias\\MERN\\frontend\\src\\actions\\cartActions.js":"19","C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\userReducer.js":"20","C:\\Users\\alias\\MERN\\frontend\\src\\constants\\userConstants.js":"21","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\LoginScreen.js":"22","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\FormContainer.js":"23","C:\\Users\\alias\\MERN\\frontend\\src\\actions\\userAction.js":"24","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\RegisterScreen.js":"25","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ProfileScreen.js":"26","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ShippingScreen.js":"27","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\CheckoutSteps.js":"28","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\PaymentScreen.js":"29","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\orderReducer.js":"31","C:\\Users\\alias\\MERN\\frontend\\src\\constants\\orderConstants.js":"32","C:\\Users\\alias\\MERN\\frontend\\src\\actions\\orderActions.js":"33","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\OrderScreen.js":"34","C:\\Users\\alias\\MERN\\frontend\\src\\test.js":"35","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\UserListScreen.js":"36","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\EditUserScreen.js":"37","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ProductListScreen.js":"38","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ProductEditScreen.js":"39","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\OrderListScreen.js":"40","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\SearchBox.js":"41"},{"size":561,"mtime":1612082648723,"results":"42","hashOfConfig":"43"},{"size":2841,"mtime":1617282858178,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"43"},{"size":1520,"mtime":1617289545426,"results":"46","hashOfConfig":"43"},{"size":449,"mtime":1611730220712,"results":"47","hashOfConfig":"43"},{"size":2257,"mtime":1617278969351,"results":"48","hashOfConfig":"43"},{"size":1038,"mtime":1615831703896,"results":"49","hashOfConfig":"43"},{"size":979,"mtime":1616158267266,"results":"50","hashOfConfig":"43"},{"size":7395,"mtime":1616164799856,"results":"51","hashOfConfig":"43"},{"size":2213,"mtime":1616158034594,"results":"52","hashOfConfig":"43"},{"size":3487,"mtime":1617282520205,"results":"53","hashOfConfig":"43"},{"size":1337,"mtime":1616157717292,"results":"54","hashOfConfig":"43"},{"size":4878,"mtime":1617282379333,"results":"55","hashOfConfig":"43"},{"size":349,"mtime":1612167523451,"results":"56","hashOfConfig":"43"},{"size":285,"mtime":1612168252842,"results":"57","hashOfConfig":"43"},{"size":3581,"mtime":1612938092183,"results":"58","hashOfConfig":"43"},{"size":1309,"mtime":1612954526118,"results":"59","hashOfConfig":"43"},{"size":232,"mtime":1612954372553,"results":"60","hashOfConfig":"43"},{"size":1278,"mtime":1617283414984,"results":"61","hashOfConfig":"43"},{"size":3736,"mtime":1615723890274,"results":"62","hashOfConfig":"43"},{"size":1456,"mtime":1615723731801,"results":"63","hashOfConfig":"43"},{"size":2457,"mtime":1612771631371,"results":"64","hashOfConfig":"43"},{"size":428,"mtime":1615011395166,"results":"65","hashOfConfig":"43"},{"size":6474,"mtime":1615724128660,"results":"66","hashOfConfig":"43"},{"size":3554,"mtime":1612846184294,"results":"67","hashOfConfig":"43"},{"size":7135,"mtime":1615705625767,"results":"68","hashOfConfig":"43"},{"size":2528,"mtime":1613745024347,"results":"69","hashOfConfig":"43"},{"size":1535,"mtime":1612957575390,"results":"70","hashOfConfig":"43"},{"size":1656,"mtime":1612961752706,"results":"71","hashOfConfig":"43"},{"size":5465,"mtime":1613745157945,"results":"72","hashOfConfig":"43"},{"size":3200,"mtime":1616143157359,"results":"73","hashOfConfig":"43"},{"size":1276,"mtime":1616142136401,"results":"74","hashOfConfig":"43"},{"size":5113,"mtime":1616140084483,"results":"75","hashOfConfig":"43"},{"size":7105,"mtime":1616152591938,"results":"76","hashOfConfig":"43"},{"size":2462,"mtime":1615378190174,"results":"77","hashOfConfig":"43"},{"size":3008,"mtime":1615739883626,"results":"78","hashOfConfig":"43"},{"size":3055,"mtime":1615739322621,"results":"79","hashOfConfig":"43"},{"size":3976,"mtime":1615994991718,"results":"80","hashOfConfig":"43"},{"size":6992,"mtime":1616133446630,"results":"81","hashOfConfig":"43"},{"size":4486,"mtime":1616151575114,"results":"82","hashOfConfig":"43"},{"size":914,"mtime":1617279506872,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"65v2iq",{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\alias\\MERN\\frontend\\src\\index.js",[],["178","179"],"C:\\Users\\alias\\MERN\\frontend\\src\\App.js",["180"],"C:\\Users\\alias\\MERN\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\HomeScreen.js",["181"],"C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Footer.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Header.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Product.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Ratings.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\store.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\actions\\productAcions.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Loader.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Message.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\CartScreen.js",["182"],"import React,{useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {Col,Row,ListGroup,Button, Image,Form} from \"react-bootstrap\"\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport {addToCart,removeFromCart} from \"../actions/cartActions\"\r\nimport Message from '../Components/Message'\r\nfunction CartScreen({match,location,history}) {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems}=cart\r\n    console.log(cartItems);\r\n    const qty=location.search?Number(location.search.split(\"=\")[1]):1\r\n    const id=match.params.id\r\n    useEffect(() => {\r\n        if(id){\r\n            dispatch(addToCart(id,qty))\r\n        }\r\n        console.log(window.location.search.split(\"=\")[1])\r\n    }, [dispatch,match,qty])\r\n    const removeFromCartHandler=(id)=>{\r\n           dispatch(removeFromCart(id));\r\n    } \r\n           \r\n    \r\n    const checkoutHandler=()=>{\r\n        history.push(`/login?redirect=shipping`)\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1> Shopping Cart</h1>\r\n                {cartItems.length===0?<Message>Cart to empty che</Message>:(\r\n                    <ListGroup variant=\"flush\">\r\n                        {cartItems.map(item=>(\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} fluid />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link> \r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                    <Form.Control as=\"select\" value={item.qty} onChange={(e)=>dispatch(addToCart(item.product,Number(e.target.value)))} defaultValue=\"1\">\r\n                                        {[...Array(item.countInStock).keys()].map((x)=>\r\n                                            <option key={x+1} value={x+1}>{x+1}</option>\r\n                                        )})\r\n                                    </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button variant=\"light\" onClick={()=>removeFromCartHandler(item.product)} ><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                ))}\r\n                    </ListGroup>\r\n                ) }\r\n            </Col>\r\n           <Col md={4}>\r\n               <ListGroup>\r\n                   <ListGroup.Item>\r\n                       <h2>\r\n                           Subtotal ({cartItems.reduce((acc,item)=>acc+item.qty,0)}) items\r\n                       </h2>\r\n                       ${cartItems.reduce((acc,item)=>acc+item.qty*item.price,0).toFixed(2)}\r\n                       \r\n                   </ListGroup.Item>\r\n               </ListGroup>\r\n               <ListGroup.Item>\r\n                   <Button  className=\"btn btn-block\" disabled={cartItems.length===0} onClick={checkoutHandler} >Proceed to checkout</Button>\r\n               </ListGroup.Item>\r\n\r\n           </Col>\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\userReducer.js",["183"],"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT,USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,USER_REGISTER_SUCCESS,USER_DETAILS_FAIL,USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,USER_UPDATE_PROFILE_FAIL,USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_RESET,USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_REQUEST,\r\n     USER_LIST_SUCCESS,USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET } from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading:true}\r\n       \r\n        case  USER_LOGIN_SUCCESS:\r\n            return {loading:false,userInfo:action.payload}\r\n    \r\n        case USER_LOGIN_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n        \r\n}\r\nexport const userRegisterReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading:true}\r\n       \r\n        case  USER_REGISTER_SUCCESS:\r\n            return {loading:false,userInfo:action.payload}\r\n    \r\n        case USER_REGISTER_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n        \r\n}\r\n\r\nexport const userDetailsReducer=(state={user:{}},action)=>{\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state,loading:true}\r\n       \r\n        case  USER_DETAILS_SUCCESS:\r\n            return {loading:false,user:action.payload}\r\n    \r\n        case USER_DETAILS_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case USER_DETAILS_RESET:\r\n            return {user:{}}\r\n        default:\r\n            return state\r\n    }\r\n\r\n        \r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading:true}\r\n       \r\n        case  USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading:false,success:true,userInfo:action.payload}\r\n    \r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n        \r\n}\r\n\r\n\r\nexport const userListReducer=(state={users:[]},action)=>{\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return {loading:true}\r\n        case USER_LIST_SUCCESS:\r\n            return {loading:false,users:action.payload}\r\n        case USER_LIST_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case USER_LIST_RESET:\r\n            return {users:[]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const deleteUserReducer=(state={},action)=>{\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return {loading:true}\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading:false,success:true}\r\n        case USER_DELETE_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer=(state={user:{}},action)=>{\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading:true}\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading:false,success:true}\r\n        case USER_UPDATE_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case USER_UPDATE_RESET:\r\n            return {user:{}}    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\LoginScreen.js",["184"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport Message from \"../Components/Message\"\r\nimport Loader from \"../Components/Loader\"\r\nimport { Form,Row,Col,Button } from \"react-bootstrap\";\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport FormContainer from '../Components/FormContainer';\r\nimport { login } from '../actions/userAction';\r\nimport axios from 'axios';\r\n\r\nfunction LoginScreen({location,history}) {\r\n    const [email, setemail] = useState(\"\")\r\n    const [password, setpassword] = useState(\"\")\r\n    const redirect=location.search?location.search.split(\"=\")[1]:\"/\"\r\n    console.log(redirect)\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {loading,error,userInfo}=userLogin\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [redirect,userInfo,history])\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()  \r\n        dispatch(login(email,password))\r\n    }\r\n    return (\r\n            <FormContainer>\r\n                <h1>Sign in karje</h1>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n                {loading && <Loader/>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>\r\n                            Email Address\r\n                        </Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter Email\" value={email} onChange={(e)=> setemail(e.target.value)} />\r\n\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>\r\n                            Password\r\n                        </Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Enter Email\" value={password} onChange={(e)=> setpassword(e.target.value)} />\r\n\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"primary\">Submit</Button>\r\n                </Form>\r\n                <Row className=\"py-3\">\r\n                    <Col>\r\n                    New Customer?\r\n                    <Link to={redirect?`/register/redirect=${redirect}`:`/register`}>\r\n                        Register\r\n                    </Link>\r\n                    </Col>\r\n                </Row>\r\n            </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\FormContainer.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\actions\\userAction.js",["185"],"import axios from \"axios\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS,USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST,\r\n     USER_REGISTER_SUCCESS,USER_DETAILS_FAIL,USER_DETAILS_REQUEST,USER_DETAILS_SUCCESS,USER_UPDATE_PROFILE_FAIL,\r\n     USER_UPDATE_PROFILE_REQUEST,USER_UPDATE_PROFILE_RESET,USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_FAIL } from \"../constants/userConstants\";\r\n\r\nexport const login=(email,password)=>async(dispatch)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const config={\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            }\r\n        }\r\n        const response =await axios.post(\"/user/login\",{email,password},config);\r\n        \r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:response.data\r\n        })\r\n        localStorage.setItem(\"userLoginInfo\",JSON.stringify(response.data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport const register=(name,email,password)=>async(dispatch)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n        const config={\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            }\r\n        }\r\n        const response =await axios.post(\"/user\",{name,email,password},config);\r\n        \r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload:response.data\r\n        })\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:response.data\r\n        })\r\n        localStorage.setItem(\"userLoginInfo\",JSON.stringify(response.data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const logout=()=>(dispatch)=>{\r\n    localStorage.removeItem(\"userLoginInfo\")\r\n    dispatch({\r\n        type:USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type:USER_DETAILS_RESET\r\n    })\r\n    dispatch({\r\n        type:ORDER_LIST_MY_RESET\r\n    })\r\n    dispatch({\r\n        type:USER_LIST_RESET\r\n    })\r\n}\r\n\r\n\r\nexport const getUserDetail=(id)=>async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n        const {userLogin:{userInfo}} =getState()\r\n        const config={\r\n            headers:{\r\n                \"Content-type\":\"application/json\",\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const response =await axios.get(`/user/${id}`,config);\r\n        \r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload:response.data\r\n        })   \r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const updateUserProfile=(user)=>async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const {userLogin:{userInfo}} =getState()\r\n        const config={\r\n            headers:{\r\n                \"Content-type\":\"application/json\",\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const response =await axios.put(`/user/profile`,user,config);\r\n        \r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:response.data\r\n        })   \r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const listUser=()=>async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n        const {userLogin:{userInfo}} =getState()\r\n        const config={\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const response =await axios.get(`/user`,config);\r\n        \r\n        dispatch({\r\n            type:USER_LIST_SUCCESS,\r\n            payload:response.data\r\n        })   \r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const deleteUserAction=(id)=>async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n        const {userLogin:{userInfo}} =getState()\r\n        const config={\r\n            headers:{\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        await axios.delete(`/user/${id}`,config);\r\n        \r\n        dispatch({\r\n            type:USER_DELETE_SUCCESS\r\n        })   \r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const UserUpdateAction=(user)=>async(dispatch,getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n        const {userLogin:{userInfo}} =getState()\r\n        const config={\r\n            headers:{\r\n                \"Content-type\":\"application/json\",\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const response=await axios.put(`/user/${user._id}`,user,config);\r\n        \r\n        dispatch({\r\n            type:USER_UPDATE_SUCCESS\r\n        })   \r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload:response.data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ProfileScreen.js",["186","187","188"],"import React,{useState,useEffect} from 'react'\r\nimport Message from \"../Components/Message\"\r\nimport Loader from \"../Components/Loader\"\r\nimport { Form,Row,Col,Button, Table } from \"react-bootstrap\";\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport { getUserDetail,updateUserProfile } from '../actions/userAction';\r\nimport { OrderMyListAction } from '../actions/orderActions';\r\nimport axios from 'axios';\r\nimport { ORDER_LIST_MY_SUCCESS } from '../constants/orderConstants';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nfunction ProfileScreen({location,history}) {\r\n    const [name, setname] = useState(\"\")\r\n    const [email, setemail] = useState(\"\")\r\n    const [password, setpassword] = useState(\"\")\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\")\r\n    const [message, setmessage] = useState(null)\r\n    const redirect=location.search?location.search.split(\"=\")[1]:\"/\"\r\n    const dispatch = useDispatch()\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {loading,error,user}=userDetails\r\n\r\n    \r\n    const orderMyList = useSelector(state => state.orderMyList)\r\n    const {loading:loadingOrders,error:errorOrders,orders}=orderMyList\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo}=userLogin\r\n    \r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success}=userUpdateProfile\r\n    \r\n    \r\n    \r\n    useEffect(() => {\r\n        if(!userInfo){\r\n            history.push(\"/login\")\r\n        }\r\n        else{\r\n            if(!user.name){\r\n                dispatch(getUserDetail(\"profile\"))\r\n                dispatch(OrderMyListAction())\r\n                \r\n               \r\n            }\r\n            else{\r\n                setname(user.name)\r\n                setemail(user.email)\r\n                console.log(user.email)\r\n                // const orders=async()=>{\r\n                //     const {data}=await axios.post(\"user/login\",{email:user.email,password:\"123456\"})\r\n                //     console.log(user.email);\r\n                //     const {token}=data\r\n                //     const {data:orderss}=await axios.get(\"order/myorders\",{headers:{Authorization:`Bearer ${token}`}})\r\n                //     dispatch({type:ORDER_LIST_MY_SUCCESS,payload:orderss})\r\n                //     // console.log(\"yes\",orderss)\r\n                // }\r\n                // orders()\r\n                \r\n        }\r\n        \r\n    }\r\n    \r\n    }, [dispatch,userInfo,history,user])\r\n    const submitHandler=(event)=>{\r\n        event.preventDefault()\r\n        if(password!==confirmPassword){\r\n            setmessage(\"Password match ni thata\")\r\n        } \r\n        else{\r\n            dispatch(updateUserProfile({id:user._id,name,email,password}))\r\n        } \r\n    }\r\n    return (\r\n            <Row>\r\n                <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant=\"danger\">{message}</Message>}\r\n                {success && <Message variant=\"success\">Profile Updated</Message>}\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n                {loading && <Loader/>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>\r\n                            Name \r\n                        </Form.Label>\r\n                        <Form.Control type=\"name\" placeholder=\"Enter Name\" value={name} onChange={(e)=> setname(e.target.value)} />\r\n\r\n                    </Form.Group>\r\n                \r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>\r\n                            Email Address\r\n                        </Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter Email\" value={email} onChange={(e)=> setemail(e.target.value)} />\r\n\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>\r\n                            Password\r\n                        </Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Enter Password\" value={password} onChange={(e)=> setpassword(e.target.value)} />\r\n\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>\r\n                            Password\r\n                        </Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={(e)=> setconfirmPassword(e.target.value)} />\r\n\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"primary\">Update</Button>\r\n                </Form>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <h2>Your Orders</h2>\r\n                    {loadingOrders ? <Loader/>:errorOrders?<Message variant=\"danger\">{errorOrders}</Message>:\r\n                    (\r\n                        <Table striped bordered hover responsive className=\"table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>DATE</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th>PAID</th>\r\n                                    <th></th>\r\n                                </tr>\r\n\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map((order,index)=>(\r\n                                    <tr>\r\n                                        <td>\r\n                                            {order._id}\r\n                                        </td>\r\n                                        <td>\r\n                                            ${order.totalPrice}\r\n                                        </td>\r\n                                        <td>\r\n                                            {order.createdAt.substring(0,10)}\r\n                                        </td>\r\n                                        <td>\r\n                                            {order.isDelivered? order.deliveredAt :( <i className=\"fas fa-times\" style={{color:\"red\"}}></i>)}\r\n                                        </td>\r\n                                        <td>\r\n                                            {order.isPaid? order.paidAt.substring(0,10) :( <i className=\"fas fa-times\" style={{color:\"red\"}}></i>)}\r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`order/${order._id}`}><Button variant=\"light\">Details</Button></LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            </Table>\r\n                    )}\r\n                    \r\n                </Col>\r\n            </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\Components\\CheckoutSteps.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\PlaceOrderScreen.js",["189","190","191"],"import React,{useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {Button,Col,Image,ListGroup, Row } from \"react-bootstrap\";\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport CheckoutSteps from '../Components/CheckoutSteps';\r\nimport FormContainer from '../Components/FormContainer';\r\nimport { createOrderAction } from '../actions/orderActions';\r\nimport Message from '../Components/Message'\r\nfunction PlaceOrderScreen({history}) {\r\n    const cart = useSelector(state => state.cart)\r\n    const dispatch = useDispatch()\r\n    const createdOrder = useSelector(state => state.createdOrder) \r\n    const { success,error,order }=createdOrder\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`order/${order._id}`)\r\n        }\r\n    }, [history,success])\r\n    const {shippingAddress,paymentMethod}=cart\r\n    cart.itemsprice=cart.cartItems.reduce((acc,item)=>acc+item.price*item.qty,0).toFixed(2)\r\n    cart.shippingPrice=(cart.itemsprice>100?0:100).toFixed(2)\r\n    cart.taxPrice=(cart.itemsprice*0.15).toFixed(2)\r\n    cart.totalPrice=(Number(cart.itemsprice)+Number(cart.shippingPrice)+Number(cart.taxPrice)).toFixed(2)\r\n    function placeOrderHandler(event){\r\n        event.preventDefault()\r\n        dispatch(createOrderAction({\r\n            shippingPrice:cart.shippingPrice,\r\n            orderItems:cart.cartItems,\r\n            paymentMethod:cart.paymentMethod,\r\n            shippingAddress:cart.shippingAddress,\r\n            totalPrice:cart.totalPrice,\r\n            taxPrice:cart.taxPrice,\r\n            itemsPrice:cart.itemsprice\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {shippingAddress.address},{shippingAddress.city}{\" \"},{shippingAddress.postalcode}{\" \"},{shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment</h2>\r\n                            <p>\r\n                                <strong>Payment Method:</strong>\r\n                                {paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Cart</h2>\r\n                            <ListGroup variant=\"flush\">\r\n                                {cart.cartItems.map((item,index)=>(\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                    <Col md={2}>    \r\n                                        <Image src={item.image} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <Link to={`product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        {item.qty} x ${item.price}= ${item.qty*item.price}   \r\n                                    </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>))}\r\n                            </ListGroup>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <h2>Order summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                        <Row>\r\n                            <Col >Items:</Col>\r\n                            <Col>${cart.itemsprice}</Col>\r\n                        </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                        <Row>\r\n                            <Col >Shipping:</Col>\r\n                            <Col>${cart.shippingPrice}</Col>\r\n                        </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                        <Row>\r\n                            <Col >Tax:</Col>\r\n                            <Col>${cart.taxPrice}</Col>\r\n                        </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                        <Row>\r\n                            <Col >Total:</Col>\r\n                            <Col>${cart.totalPrice}</Col>\r\n                        </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            {error && <Message variant=\"danger\">{error}</Message>}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button className=\"btn btn-block\" disabled={cart.cartItems.length===0} onClick={placeOrderHandler} >Place Order</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\orderReducer.js",["192","193"],"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS,\r\n        ORDER_DELIVER_FAIL,ORDER_DELIVER_REQUEST,ORDER_DELIVER_RESET,ORDER_DELIVER_SUCCESS,\r\n        ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_RESET, ORDER_DETAILS_SUCCESS, \r\n        ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_RESET,\r\n        ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST,ORDER_LIST_RESET, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL,\r\n        ORDER_PAY_REQUEST, ORDER_PAY_RESET, ORDER_PAY_SUCCESS  } from \"../constants/orderConstants\";\r\n\r\nexport const createOrderReducer=(state={},action)=>{\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return{loading:true}\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {loading:false,success:true,order:action.payload}\r\n        case ORDER_CREATE_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const detailsOrderReducer=(state={loading:true,orderItems:[],shippingAddress:{}},action)=>{\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return{...state,loading:true}\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {loading:false,order:action.payload}\r\n        case ORDER_DETAILS_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case ORDER_DETAILS_RESET:\r\n            return { }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const OrderPayReducer=(state={},action)=>{\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return{loading:true}\r\n        case ORDER_PAY_SUCCESS:\r\n            return {loading:false,success:true}\r\n        case ORDER_PAY_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const OrderMyListReducer=(state={orders:[]},action)=>{\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return{loading:true}\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {loading:false,orders:action.payload}\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        \r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const OrdersListReducer=(state={orders:[]},action)=>{\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return{loading:true}\r\n        case ORDER_LIST_SUCCESS:\r\n            return {loading:false,orders:action.payload}\r\n        case ORDER_LIST_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        \r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const OrderDeliverReducer=(state={},action)=>{\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return{loading:true}\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {loading:false,success:true}\r\n        case ORDER_DELIVER_FAIL:\r\n            return {loading:false,error:action.payload}\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return {...state}\r\n    }\r\n}","C:\\Users\\alias\\MERN\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\OrderScreen.js",["194"],"import React,{useEffect, useState} from 'react'\r\nimport {PayPalButton} from \"react-paypal-button-v2\"\r\nimport {Link} from 'react-router-dom';\r\nimport {Button, Col,Image,ListGroup, Row } from \"react-bootstrap\";\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport {  detailOrderAction, OrderDeliverAction, OrderPayAction } from '../actions/orderActions';\r\nimport Message from '../Components/Message'\r\nimport Loader from '../Components/Loader';\r\nimport axios from 'axios';\r\nimport { ORDER_LIST_RESET } from '../constants/orderConstants';\r\n\r\nfunction OrderScreen({location,match,history}) {\r\n    const cart = useSelector(state => state.cart)\r\n    const detailsOrder = useSelector(state => state.detailsOrder)\r\n    const {loading,order,error}=detailsOrder\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading:loadingPay,success:successPay}=orderPay\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {loading:loadingDeliver,success:successDeliver}=orderDeliver\r\n    cart.itemsprice=cart.cartItems.reduce((acc,item)=>acc+item.price*item.qty,0).toFixed(2)\r\n    const [sdkReady, setsdkReady] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  //sb-6evwd4126098@personal.example.comDEFAULT\r\n    useEffect(() => {\r\n        // location.reload()\r\n        if(!userInfo){\r\n            history.push(\"/login\")\r\n        }\r\n        console.log(order)\r\n        const addPaypalScript=async()=>{\r\n            const {data}=await axios.get(\"/config/paypal\")\r\n            console.log(data);\r\n           const script=document.createElement('script');\r\n           script.src=`https://www.paypal.com/sdk/js?client-id=${data}`\r\n           script.type=\"text/javascript\"\r\n           script.async=true\r\n           script.onload=()=>{\r\n                setsdkReady(true)\r\n           }\r\n           document.body.appendChild(script);\r\n        }\r\n        \r\n        if(!order || successPay || successDeliver ){\r\n            dispatch({type:\"ORDER_PAY_RESET\"})\r\n            dispatch({type:\"ORDER_DELIVER_RESET\"})\r\n            dispatch(detailOrderAction(match.params.id))\r\n        }\r\n        else if(!order.isPaid){\r\n            if(!window.paypal){ \r\n                addPaypalScript();\r\n            }\r\n            else{\r\n                setsdkReady(true)\r\n            }\r\n\r\n        }\r\n   }, [dispatch,match.params.id,successPay,order,userInfo,history,successDeliver])\r\n   const successHandler=(paymentResult)=>{\r\n        dispatch(OrderPayAction(order._id,paymentResult))\r\n        console.log(paymentResult)\r\n   }\r\n   const updateToDelivered=()=>{\r\n        dispatch(OrderDeliverAction(order))\r\n   }\r\n    \r\n    return loading?<Loader/>:error?<Message variant=\"danger\">{error}</Message>:\r\n        <>\r\n        <h1>Order</h1>\r\n        <Row>\r\n        <Col md={8}> \r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p><strong>Name:</strong>{order.user.name}</p>\r\n                    <p><strong>Email:</strong>\r\n                    <a href={`mailto:${order.user.email}`}> {order.user.email}</a></p>\r\n                    <p>\r\n                        <strong>Address:</strong>\r\n                        {order.shippingAddress.address},{order.shippingAddress.city}{\" \"},{order.shippingAddress.postalCode}{\" \"},{order.shippingAddress.country}\r\n                    </p>\r\n                    {order.isDelivered ? <Message variant=\"success\">Delivered on {order.deliveredAt}</Message> : <Message variant=\"danger\">Not Delivered</Message>}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment</h2>\r\n                    <p>\r\n                        <strong>Payment Method:</strong>\r\n                        {order.paymentMethod}\r\n                    </p>\r\n                    {order.isPaid? <Message variant=\"success\">Paid on{order.paidAt}</Message>:<Message variant=\"warning\">Not Paid</Message>}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Cart</h2>\r\n                    <ListGroup variant=\"flush\">\r\n                        {order.orderItems.map((item,index)=>(\r\n                        <ListGroup.Item key={index}>\r\n                            <Row>\r\n                            <Col md={2}>    \r\n                                <Image src={item.image} fluid rounded/>\r\n                            </Col>\r\n                            <Col >\r\n                                <Link to={`product/${item.product}`}>\r\n                                    {item.name}\r\n                                </Link>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                {item.qty} x ${item.price}= ${item.qty*item.price}   \r\n                            </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>))}\r\n                    </ListGroup>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <ListGroup>\r\n                <ListGroup.Item>\r\n                    <h2>Order summary</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                <Row>\r\n                    <Col >Items:</Col>\r\n                    <Col>${cart.itemsprice}</Col>\r\n                </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                <Row>\r\n                    <Col >Shipping:</Col>\r\n                    <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                <Row>\r\n                    <Col >Tax:</Col>\r\n                    <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                <Row>\r\n                    <Col >Total:</Col>\r\n                    <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n                </ListGroup.Item>\r\n                {!order.isPaid && \r\n                <ListGroup.Item>\r\n                    {loadingPay && <Loader/>}\r\n                    {!sdkReady? \" \" :(\r\n                        <PayPalButton amount={`${order.totalPrice}`}   onSuccess={successHandler} />\r\n                    )}\r\n                </ListGroup.Item>\r\n                    }\r\n                {userInfo && userInfo.isAdmin && order.isPaid &&!order.isDelivered &&(\r\n                    <ListGroup.Item>\r\n                    <Button className=\"btn btn-block\" onClick={()=>updateToDelivered()} >Mark As Delivered</Button>\r\n                    </ListGroup.Item>\r\n                )}\r\n                {loadingDeliver && <Loader/>}\r\n\r\n                    {error && \r\n                        <ListGroup.Item>\r\n                        <Message variant=\"danger\">{error}</Message>\r\n                        </ListGroup.Item>\r\n                    }\r\n                \r\n            </ListGroup>\r\n        </Col>\r\n    </Row>\r\n        </>\r\n    \r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\test.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\EditUserScreen.js",["195","196"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport Message from \"../Components/Message\"\r\nimport Loader from \"../Components/Loader\"\r\nimport { Form,Button } from \"react-bootstrap\";\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport FormContainer from '../Components/FormContainer';\r\nimport { getUserDetail, UserUpdateAction } from '../actions/userAction';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nfunction EditUserScreen({match,history}) {\r\n    const userId=match.params.id\r\n    const [name, setname] = useState(\"\")\r\n    const [email, setemail] = useState(\"\")\r\n    const [isAdmin, setisAdmin] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {loading,error,user}=userDetails\r\n    const updateUser = useSelector(state => state.updateUser)\r\n    const {loading:loadingUpdate,error:errorUpdate,success:successUpdate}=updateUser\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type:USER_UPDATE_RESET})\r\n            history.push(\"/admin/userlist\")\r\n        }else{\r\n            if(!user.name || user._id!==userId ){\r\n                dispatch(getUserDetail(userId))\r\n            }else{\r\n                setname(user.name)\r\n                setemail(user.email)\r\n                setisAdmin(user.isAdmin)\r\n\r\n            }\r\n        }\r\n    }, [user,dispatch,userId,successUpdate,history])\r\n    const submitHandler=(event)=>{\r\n        event.preventDefault()\r\n        dispatch(UserUpdateAction({_id:userId,name,email,isAdmin}))\r\n    }\r\n    return (\r\n        <>\r\n        <Link to=\"/admin/userList\">Go Back</Link>\r\n        <FormContainer>\r\n                <h1>Update User</h1>\r\n                {loading?<Loader/>:error?<Message variant=\"danger\">{error}</Message>:(\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>\r\n                            Name\r\n                        </Form.Label>\r\n                        <Form.Control type=\"name\" placeholder=\"Enter Name\" value={name} onChange={(e)=> setname(e.target.value)} />\r\n\r\n                    </Form.Group>\r\n                \r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>\r\n                            Email Address\r\n                        </Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter Email\" value={email} onChange={(e)=> setemail(e.target.value)} />\r\n\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"isAdmin\">\r\n                        <Form.Check type=\"checkbox\" label=\"isAdmin\" checked={isAdmin} onChange={(e)=> setisAdmin(e.target.checked)}/>\r\n                    </Form.Group>\r\n                    \r\n                    <Button type=\"submit\" variant=\"primary\">Update</Button>\r\n                </Form>\r\n               \r\n               )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditUserScreen\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ProductListScreen.js",["197","198","199","200"],"import React,{useEffect} from 'react'\r\nimport {LinkContainer} from \"react-router-bootstrap\"\r\nimport Message from \"../Components/Message\"\r\nimport Loader from \"../Components/Loader\"\r\nimport { Table,Button,Row,Col } from \"react-bootstrap\";\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport { deleteUserAction, listUser } from '../actions/userAction';\r\nimport { listProducts, productCreateAction, productDeleteAction } from '../actions/productAcions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nfunction ProductListScreen({history}) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error,loading,products}=productList\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {error:errorDelete,loading:loadingDelete,success:successDelete}=productDelete\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading:load,error:err,success,product}=productCreate\r\n    const {userInfo}=userLogin\r\n    console.log(products)\r\n    useEffect(() => {\r\n        dispatch({type:PRODUCT_CREATE_RESET})\r\n        if(!userInfo.isAdmin){\r\n            history.push(\"/\")\r\n        }\r\n        if(success){\r\n            history.push(`/admin/product/${product._id}/edit`)\r\n        }\r\n        else{\r\n            dispatch(listProducts())\r\n        }\r\n        \r\n    }, [dispatch,history,userInfo,successDelete,success,product])\r\n    const deleteHandler=(id)=>{\r\n        if(window.confirm(\"Sure delete kari devanu\"))\r\n        {\r\n            dispatch(productDeleteAction(id))\r\n        }\r\n        console.log(\"product delete karvanu che\");\r\n    }\r\n    const createProduct=()=>{\r\n        dispatch(productCreateAction())\r\n        console.log(\"product banavyo che\");\r\n    }\r\n    return (\r\n        <div>\r\n            <Row className=\"align-items-center\">\r\n                <Col >\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className=\"text-right\">\r\n                    <Button className=\"my-3\" onClick={()=>createProduct()} ><i className=\"fas fa-plus\"></i> Create Product</Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader/>}\r\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n            {loading? <Loader/>:error?<Message variant=\"danger\">{error}</Message>:(\r\n                <Table striped bordered responsive hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>price</th>\r\n                            <th>Category</th>\r\n                            <th>Brand</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map(product=>(\r\n                            <tr key={`${product._id}`}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>{product.price}</td>\r\n                                <td>{product.category}</td>\r\n                                <td>{product.brand} </td>\r\n                                <td><LinkContainer to={`/admin/product/${product._id}/edit`}><Button variant=\"light\" className=\"btn-sm\">\r\n                                    <i className=\"fas fa-edit\"></i></Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant=\"light\" className=\"btn-sm\" onClick={()=>deleteHandler(product._id)}><i className=\"fas fa-trash\" style={{color:\"red\"}}></i></Button></td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\OrderListScreen.js",["201","202","203","204","205","206"],"import React,{useEffect} from 'react'\r\nimport {LinkContainer} from \"react-router-bootstrap\"\r\nimport Message from \"../Components/Message\"\r\nimport Loader from \"../Components/Loader\"\r\nimport { Table,Button,Row,Col } from \"react-bootstrap\";\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport { deleteUserAction, listUser } from '../actions/userAction';\r\nimport { listProducts, productCreateAction, productDeleteAction } from '../actions/productAcions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\nimport { detailOrderAction, OrderListAction } from '../actions/orderActions';\r\n\r\nfunction OrderListScreen({history}) {\r\n    const dispatch = useDispatch()\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {error,loading,orders}=orderList\r\n  \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    // const productCreate = useSelector(state => state.productCreate)\r\n    // const {loading:load,error:err,success,product}=productCreate\r\n    const {userInfo}=userLogin\r\n    console.log(orders)\r\n    useEffect(() => {\r\n        // dispatch({type:PRODUCT_CREATE_RESET})\r\n        \r\n        if(!userInfo.isAdmin){\r\n            history.push(\"/\")\r\n        }\r\n        // if(success){\r\n        //     history.push(`/admin/order/${order._id}/edit`)\r\n        // }\r\n        else{\r\n            dispatch(OrderListAction())\r\n        }\r\n        \r\n    }, [dispatch,history,userInfo])\r\n    const OrdersReset=(id)=>{\r\n        dispatch(detailOrderAction(id))\r\n        console.log(\"yes\");\r\n        console.log(orders);\r\n    }\r\n    // const deleteHandler=(id)=>{\r\n    //     if(window.confirm(\"Sure delete kari devanu\"))\r\n    //     {\r\n    //         dispatch(productDeleteAction(id))\r\n    //     }\r\n    //     console.log(\"product delete karvanu che\");\r\n    // }\r\n    // const createProduct=()=>{\r\n    //     dispatch(productCreateAction())\r\n    //     console.log(\"product banavyo che\");\r\n    // }\r\n    return (\r\n        <div>\r\n            <Row className=\"align-items-center\">\r\n                <Col >\r\n                    <h1>Orders</h1>\r\n                </Col>\r\n                {/* <Col className=\"text-right\">\r\n                    <Button className=\"my-3\" onClick={()=>createProduct()} ><i className=\"fas fa-plus\"></i> Create Product</Button>\r\n                </Col> */}\r\n            </Row>\r\n            {loading? <Loader/>:error?<Message variant=\"danger\">{error}</Message>:(\r\n                <Table striped bordered responsive hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>user</th>\r\n                            <th>total</th>\r\n                            <th>date</th>\r\n                            <th>Delivered</th>\r\n                            <th>Paid</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order=>(\r\n                            <tr key={`${order._id}`}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user.name}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>{order.createdAt.substring(0,10)}</td>  \r\n                                <td>{order.isDelivered ? \r\n                                <i className=\"fas fa-check\" style={{color:'green'}}></i> \r\n                                : <i className=\"fas fa-times\" style={{color:\"red\"}}></i>}</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0,10):\r\n                                <i className=\"fas fa-times\" style={{color:'red'}}></i> \r\n\r\n                                 } </td>\r\n\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}><Button onClick={()=>OrdersReset(order._id)} variant=\"light\" className=\"btn-sm\">\r\n                                     Details</Button>\r\n                                    </LinkContainer>\r\n                                    {/* <Button variant=\"light\" className=\"btn-sm\" onClick={()=>deleteHandler(product._id)}><i className=\"fas fa-trash\" style={{color:\"red\"}}></i></Button> */}\r\n                                    </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\SearchBox.js",["207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":19,"column":8,"nodeType":"214","messageId":"215","endLine":19,"endColumn":25},{"ruleId":"212","severity":1,"message":"216","line":1,"column":15,"nodeType":"214","messageId":"215","endLine":1,"endColumn":23},{"ruleId":"217","severity":1,"message":"218","line":19,"column":8,"nodeType":"219","endLine":19,"endColumn":28,"suggestions":"220"},{"ruleId":"212","severity":1,"message":"221","line":4,"column":5,"nodeType":"214","messageId":"215","endLine":4,"endColumn":30},{"ruleId":"212","severity":1,"message":"222","line":9,"column":8,"nodeType":"214","messageId":"215","endLine":9,"endColumn":13},{"ruleId":"212","severity":1,"message":"221","line":5,"column":34,"nodeType":"214","messageId":"215","endLine":5,"endColumn":59},{"ruleId":"212","severity":1,"message":"222","line":8,"column":8,"nodeType":"214","messageId":"215","endLine":8,"endColumn":13},{"ruleId":"212","severity":1,"message":"223","line":9,"column":10,"nodeType":"214","messageId":"215","endLine":9,"endColumn":31},{"ruleId":"212","severity":1,"message":"224","line":18,"column":11,"nodeType":"214","messageId":"215","endLine":18,"endColumn":19},{"ruleId":"212","severity":1,"message":"216","line":1,"column":26,"nodeType":"214","messageId":"215","endLine":1,"endColumn":34},{"ruleId":"212","severity":1,"message":"225","line":6,"column":8,"nodeType":"214","messageId":"215","endLine":6,"endColumn":21},{"ruleId":"217","severity":1,"message":"226","line":18,"column":8,"nodeType":"219","endLine":18,"endColumn":25,"suggestions":"227"},{"ruleId":"212","severity":1,"message":"228","line":4,"column":69,"nodeType":"214","messageId":"215","endLine":4,"endColumn":88},{"ruleId":"212","severity":1,"message":"229","line":5,"column":51,"nodeType":"214","messageId":"215","endLine":5,"endColumn":67},{"ruleId":"212","severity":1,"message":"229","line":10,"column":10,"nodeType":"214","messageId":"215","endLine":10,"endColumn":26},{"ruleId":"212","severity":1,"message":"230","line":20,"column":20,"nodeType":"214","messageId":"215","endLine":20,"endColumn":33},{"ruleId":"212","severity":1,"message":"231","line":20,"column":40,"nodeType":"214","messageId":"215","endLine":20,"endColumn":51},{"ruleId":"212","severity":1,"message":"232","line":7,"column":10,"nodeType":"214","messageId":"215","endLine":7,"endColumn":26},{"ruleId":"212","severity":1,"message":"233","line":7,"column":28,"nodeType":"214","messageId":"215","endLine":7,"endColumn":36},{"ruleId":"212","severity":1,"message":"234","line":19,"column":20,"nodeType":"214","messageId":"215","endLine":19,"endColumn":24},{"ruleId":"212","severity":1,"message":"235","line":19,"column":31,"nodeType":"214","messageId":"215","endLine":19,"endColumn":34},{"ruleId":"212","severity":1,"message":"232","line":7,"column":10,"nodeType":"214","messageId":"215","endLine":7,"endColumn":26},{"ruleId":"212","severity":1,"message":"233","line":7,"column":28,"nodeType":"214","messageId":"215","endLine":7,"endColumn":36},{"ruleId":"212","severity":1,"message":"236","line":8,"column":10,"nodeType":"214","messageId":"215","endLine":8,"endColumn":22},{"ruleId":"212","severity":1,"message":"237","line":8,"column":24,"nodeType":"214","messageId":"215","endLine":8,"endColumn":43},{"ruleId":"212","severity":1,"message":"238","line":8,"column":45,"nodeType":"214","messageId":"215","endLine":8,"endColumn":64},{"ruleId":"212","severity":1,"message":"239","line":9,"column":10,"nodeType":"214","messageId":"215","endLine":9,"endColumn":30},{"ruleId":"240","severity":1,"message":"241","line":5,"column":20,"nodeType":"242","messageId":"243","endLine":5,"endColumn":22},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"no-unused-vars","'ProductUserScreen' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["246"],"'USER_UPDATE_PROFILE_RESET' is defined but never used.","'axios' is defined but never used.","'ORDER_LIST_MY_SUCCESS' is defined but never used.","'redirect' is assigned a value but never used.","'FormContainer' is defined but never used.","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["247"],"'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_LIST_RESET' is defined but never used.","'loadingUpdate' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","'deleteUserAction' is defined but never used.","'listUser' is defined but never used.","'load' is assigned a value but never used.","'err' is assigned a value but never used.","'listProducts' is defined but never used.","'productCreateAction' is defined but never used.","'productDeleteAction' is defined but never used.","'PRODUCT_CREATE_RESET' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [dispatch, id, match, qty]",{"range":"252","text":"253"},"Update the dependencies array to be: [history, order._id, success]",{"range":"254","text":"255"},[763,783],"[dispatch, id, match, qty]",[786,803],"[history, order._id, success]"]