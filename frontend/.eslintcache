[{"C:\\Users\\alias\\MERN\\frontend\\src\\index.js":"1","C:\\Users\\alias\\MERN\\frontend\\src\\App.js":"2","C:\\Users\\alias\\MERN\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\HomeScreen.js":"4","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Footer.js":"5","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Header.js":"6","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Product.js":"7","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Ratings.js":"8","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\alias\\MERN\\frontend\\src\\store.js":"10","C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\productReducer.js":"11","C:\\Users\\alias\\MERN\\frontend\\src\\constants\\productConstants.js":"12","C:\\Users\\alias\\MERN\\frontend\\src\\actions\\productAcions.js":"13","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Loader.js":"14","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Message.js":"15","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\CartScreen.js":"16","C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\cartReducer.js":"17","C:\\Users\\alias\\MERN\\frontend\\src\\constants\\cartConstants.js":"18","C:\\Users\\alias\\MERN\\frontend\\src\\actions\\cartActions.js":"19","C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\userReducer.js":"20","C:\\Users\\alias\\MERN\\frontend\\src\\constants\\userConstants.js":"21","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\LoginScreen.js":"22","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\FormContainer.js":"23","C:\\Users\\alias\\MERN\\frontend\\src\\actions\\userAction.js":"24","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\RegisterScreen.js":"25","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ProfileScreen.js":"26","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ShippingScreen.js":"27","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\CheckoutSteps.js":"28","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\PaymentScreen.js":"29","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\orderReducer.js":"31","C:\\Users\\alias\\MERN\\frontend\\src\\constants\\orderConstants.js":"32","C:\\Users\\alias\\MERN\\frontend\\src\\actions\\orderActions.js":"33","C:\\Users\\alias\\MERN\\frontend\\src\\screens\\OrderScreen.js":"34","C:\\Users\\alias\\MERN\\frontend\\src\\test.js":"35"},{"size":561,"mtime":1612082648723,"results":"36","hashOfConfig":"37"},{"size":1697,"mtime":1613753459098,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":1349,"mtime":1612244802298,"results":"40","hashOfConfig":"37"},{"size":449,"mtime":1611730220712,"results":"41","hashOfConfig":"37"},{"size":1592,"mtime":1612943620953,"results":"42","hashOfConfig":"37"},{"size":1038,"mtime":1611919231994,"results":"43","hashOfConfig":"37"},{"size":877,"mtime":1611740975896,"results":"44","hashOfConfig":"37"},{"size":4193,"mtime":1612184014168,"results":"45","hashOfConfig":"37"},{"size":1674,"mtime":1615478545803,"results":"46","hashOfConfig":"37"},{"size":1089,"mtime":1612177743470,"results":"47","hashOfConfig":"37"},{"size":354,"mtime":1612175103011,"results":"48","hashOfConfig":"37"},{"size":1286,"mtime":1612188445266,"results":"49","hashOfConfig":"37"},{"size":349,"mtime":1612167523451,"results":"50","hashOfConfig":"37"},{"size":285,"mtime":1612168252842,"results":"51","hashOfConfig":"37"},{"size":3581,"mtime":1612938092183,"results":"52","hashOfConfig":"37"},{"size":1309,"mtime":1612954526118,"results":"53","hashOfConfig":"37"},{"size":232,"mtime":1612954372553,"results":"54","hashOfConfig":"37"},{"size":1278,"mtime":1612954443583,"results":"55","hashOfConfig":"37"},{"size":2676,"mtime":1615621868630,"results":"56","hashOfConfig":"37"},{"size":1026,"mtime":1615621612212,"results":"57","hashOfConfig":"37"},{"size":2457,"mtime":1612771631371,"results":"58","hashOfConfig":"37"},{"size":428,"mtime":1615011395166,"results":"59","hashOfConfig":"37"},{"size":4744,"mtime":1615621958974,"results":"60","hashOfConfig":"37"},{"size":3554,"mtime":1612846184294,"results":"61","hashOfConfig":"37"},{"size":7106,"mtime":1615616913509,"results":"62","hashOfConfig":"37"},{"size":2528,"mtime":1613745024347,"results":"63","hashOfConfig":"37"},{"size":1535,"mtime":1612957575390,"results":"64","hashOfConfig":"37"},{"size":1656,"mtime":1612961752706,"results":"65","hashOfConfig":"37"},{"size":5465,"mtime":1613745157945,"results":"66","hashOfConfig":"37"},{"size":2101,"mtime":1615566447172,"results":"67","hashOfConfig":"37"},{"size":774,"mtime":1615566168671,"results":"68","hashOfConfig":"37"},{"size":3456,"mtime":1615482936270,"results":"69","hashOfConfig":"37"},{"size":6214,"mtime":1615479098697,"results":"70","hashOfConfig":"37"},{"size":2462,"mtime":1615378190174,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"65v2iq",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\alias\\MERN\\frontend\\src\\index.js",[],["148","149"],"C:\\Users\\alias\\MERN\\frontend\\src\\App.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\HomeScreen.js",["150"],"import React,{useState,useEffect} from 'react'\r\nimport {Row,Col} from \"react-bootstrap\"\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport Product from \"../Components/Product\"\r\nimport {listProducts} from \"../actions/productAcions\"\r\nimport Loader from \"../Components/Loader\"\r\nimport Message from \"../Components/Message\"\r\n\r\nfunction HomeScreen() {\r\n    // const [products,setProducts]=useState([]);\r\n    const dispatch=useDispatch();\r\n    const productList = useSelector(state => state.productList);\r\n    const {loading,error,products }=productList\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n        //  const fetchproducts=async()=>{\r\n        //     const response=await axios.get(\"http://localhost:5000/products\");\r\n        //     setProducts(response.data);\r\n        // }\r\n        // fetchproducts();\r\n    }, [dispatch])\r\n    return (\r\n        <div>\r\n            <h1>Latest Products</h1>\r\n            {loading?<Loader/>:error?<Message variant=\"danger\">{error}</Message>:\r\n            <Row>\r\n                {products.map((product)=>(\r\n                    <Col lg={3} md={4} sm={6} xs={12}>\r\n                        <Product id={product._id} product={product}/>\r\n                    </Col>\r\n                )\r\n                    )}\r\n            </Row>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Footer.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Header.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Product.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Ratings.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\store.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\actions\\productAcions.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Loader.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\Components\\Message.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\CartScreen.js",["151"],"import React,{useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {Col,Row,ListGroup,Button, Image,Form} from \"react-bootstrap\"\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport {addToCart,removeFromCart} from \"../actions/cartActions\"\r\nimport Message from '../Components/Message'\r\nfunction CartScreen({match,location,history}) {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems}=cart\r\n    console.log(cartItems);\r\n    const qty=location.search?Number(location.search.split(\"=\")[1]):1\r\n    const id=match.params.id\r\n    useEffect(() => {\r\n        if(id){\r\n            dispatch(addToCart(id,qty))\r\n        }\r\n        console.log(window.location.search.split(\"=\")[1])\r\n    }, [dispatch,match,qty])\r\n    const removeFromCartHandler=(id)=>{\r\n           dispatch(removeFromCart(id));\r\n    } \r\n           \r\n    \r\n    const checkoutHandler=()=>{\r\n        history.push(`/login?redirect=shipping`)\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1> Shopping Cart</h1>\r\n                {cartItems.length===0?<Message>Cart to empty che</Message>:(\r\n                    <ListGroup variant=\"flush\">\r\n                        {cartItems.map(item=>(\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} fluid />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link> \r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                    <Form.Control as=\"select\" value={item.qty} onChange={(e)=>dispatch(addToCart(item.product,Number(e.target.value)))} defaultValue=\"1\">\r\n                                        {[...Array(item.countInStock).keys()].map((x)=>\r\n                                            <option key={x+1} value={x+1}>{x+1}</option>\r\n                                        )})\r\n                                    </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button variant=\"light\" onClick={()=>removeFromCartHandler(item.product)} ><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                ))}\r\n                    </ListGroup>\r\n                ) }\r\n            </Col>\r\n           <Col md={4}>\r\n               <ListGroup>\r\n                   <ListGroup.Item>\r\n                       <h2>\r\n                           Subtotal ({cartItems.reduce((acc,item)=>acc+item.qty,0)}) items\r\n                       </h2>\r\n                       ${cartItems.reduce((acc,item)=>acc+item.qty*item.price,0).toFixed(2)}\r\n                       \r\n                   </ListGroup.Item>\r\n               </ListGroup>\r\n               <ListGroup.Item>\r\n                   <Button  className=\"btn btn-block\" disabled={cartItems.length===0} onClick={checkoutHandler} >Proceed to checkout</Button>\r\n               </ListGroup.Item>\r\n\r\n           </Col>\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\userReducer.js",["152"],"C:\\Users\\alias\\MERN\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\LoginScreen.js",["153"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport Message from \"../Components/Message\"\r\nimport Loader from \"../Components/Loader\"\r\nimport { Form,Row,Col,Button } from \"react-bootstrap\";\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport FormContainer from '../Components/FormContainer';\r\nimport { login } from '../actions/userAction';\r\nimport axios from 'axios';\r\n\r\nfunction LoginScreen({location,history}) {\r\n    const [email, setemail] = useState(\"\")\r\n    const [password, setpassword] = useState(\"\")\r\n    const redirect=location.search?location.search.split(\"=\")[1]:\"/\"\r\n    console.log(redirect)\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {loading,error,userInfo}=userLogin\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [redirect,userInfo,history])\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()  \r\n        dispatch(login(email,password))\r\n    }\r\n    return (\r\n            <FormContainer>\r\n                <h1>Sign in karje</h1>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n                {loading && <Loader/>}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>\r\n                            Email Address\r\n                        </Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter Email\" value={email} onChange={(e)=> setemail(e.target.value)} />\r\n\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>\r\n                            Password\r\n                        </Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Enter Email\" value={password} onChange={(e)=> setpassword(e.target.value)} />\r\n\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"primary\">Submit</Button>\r\n                </Form>\r\n                <Row className=\"py-3\">\r\n                    <Col>\r\n                    New Customer?\r\n                    <Link to={redirect?`/register/redirect=${redirect}`:`/register`}>\r\n                        Register\r\n                    </Link>\r\n                    </Col>\r\n                </Row>\r\n            </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\Components\\FormContainer.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\actions\\userAction.js",["154"],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ProfileScreen.js",["155"],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\Components\\CheckoutSteps.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\PlaceOrderScreen.js",["156","157","158"],"import React,{useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {Button,Col,Image,ListGroup, Row } from \"react-bootstrap\";\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport CheckoutSteps from '../Components/CheckoutSteps';\r\nimport FormContainer from '../Components/FormContainer';\r\nimport { createOrderAction } from '../actions/orderActions';\r\nimport Message from '../Components/Message'\r\nfunction PlaceOrderScreen({history}) {\r\n    const cart = useSelector(state => state.cart)\r\n    const dispatch = useDispatch()\r\n    const createdOrder = useSelector(state => state.createdOrder) \r\n    const { success,error,order }=createdOrder\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`order/${order._id}`)\r\n        }\r\n    }, [history,success])\r\n    const {shippingAddress,paymentMethod}=cart\r\n    cart.itemsprice=cart.cartItems.reduce((acc,item)=>acc+item.price*item.qty,0).toFixed(2)\r\n    cart.shippingPrice=(cart.itemsprice>100?0:100).toFixed(2)\r\n    cart.taxPrice=(cart.itemsprice*0.15).toFixed(2)\r\n    cart.totalPrice=(Number(cart.itemsprice)+Number(cart.shippingPrice)+Number(cart.taxPrice)).toFixed(2)\r\n    function placeOrderHandler(event){\r\n        event.preventDefault()\r\n        dispatch(createOrderAction({\r\n            shippingPrice:cart.shippingPrice,\r\n            orderItems:cart.cartItems,\r\n            paymentMethod:cart.paymentMethod,\r\n            shippingAddress:cart.shippingAddress,\r\n            totalPrice:cart.totalPrice,\r\n            taxPrice:cart.taxPrice,\r\n            itemsPrice:cart.itemsprice\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {shippingAddress.address},{shippingAddress.city}{\" \"},{shippingAddress.postalcode}{\" \"},{shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment</h2>\r\n                            <p>\r\n                                <strong>Payment Method:</strong>\r\n                                {paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Cart</h2>\r\n                            <ListGroup variant=\"flush\">\r\n                                {cart.cartItems.map((item,index)=>(\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                    <Col md={2}>    \r\n                                        <Image src={item.image} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <Link to={`product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        {item.qty} x ${item.price}= ${item.qty*item.price}   \r\n                                    </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>))}\r\n                            </ListGroup>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <h2>Order summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                        <Row>\r\n                            <Col >Items:</Col>\r\n                            <Col>${cart.itemsprice}</Col>\r\n                        </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                        <Row>\r\n                            <Col >Shipping:</Col>\r\n                            <Col>${cart.shippingPrice}</Col>\r\n                        </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                        <Row>\r\n                            <Col >Tax:</Col>\r\n                            <Col>${cart.taxPrice}</Col>\r\n                        </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                        <Row>\r\n                            <Col >Total:</Col>\r\n                            <Col>${cart.totalPrice}</Col>\r\n                        </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            {error && <Message variant=\"danger\">{error}</Message>}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button className=\"btn btn-block\" disabled={cart.cartItems.length===0} onClick={placeOrderHandler} >Place Order</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\reducers\\orderReducer.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\alias\\MERN\\frontend\\src\\screens\\OrderScreen.js",["159"],"import React,{useEffect, useState} from 'react'\r\nimport {PayPalButton} from \"react-paypal-button-v2\"\r\nimport {Link} from 'react-router-dom';\r\nimport {Col,Image,ListGroup, Row } from \"react-bootstrap\";\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport {  detailOrderAction, OrderPayAction } from '../actions/orderActions';\r\nimport Message from '../Components/Message'\r\nimport Loader from '../Components/Loader';\r\nimport axios from 'axios';\r\nfunction OrderScreen({match,history}) {\r\n    const cart = useSelector(state => state.cart)\r\n    const detailsOrder = useSelector(state => state.detailsOrder)\r\n    const {loading,order,error}=detailsOrder\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading:loadingPay,success:successPay}=orderPay\r\n    cart.itemsprice=cart.cartItems.reduce((acc,item)=>acc+item.price*item.qty,0).toFixed(2)\r\n    const [sdkReady, setsdkReady] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n  //sb-6evwd4126098@personal.example.comDEFAULT\r\n    useEffect(() => {\r\n        \r\n        console.log(order)\r\n        const addPaypalScript=async()=>{\r\n            const {data}=await axios.get(\"/config/paypal\")\r\n            console.log(data);\r\n           const script=document.createElement('script');\r\n           script.src=`https://www.paypal.com/sdk/js?client-id=${data}`\r\n           script.type=\"text/javascript\"\r\n           script.async=true\r\n           script.onload=()=>{\r\n                setsdkReady(true)\r\n           }\r\n           document.body.appendChild(script);\r\n        }\r\n        \r\n        if(!order || successPay ){\r\n            dispatch({type:\"ORDER_PAY_RESET\"})\r\n            dispatch(detailOrderAction(match.params.id))\r\n        }\r\n        else if(!order.isPaid){\r\n            if(!window.paypal){ \r\n                addPaypalScript();\r\n            }\r\n            else{\r\n                setsdkReady(true)\r\n            }\r\n\r\n        }\r\n   }, [dispatch,match.params.id,successPay,order])\r\n   const successHandler=(paymentResult)=>{\r\n        dispatch(OrderPayAction(order._id,paymentResult))\r\n        console.log(paymentResult)\r\n   }\r\n    \r\n    return loading?<Loader/>:error?<Message variant=\"danger\">{error}</Message>:\r\n        <>\r\n        <h1>Order</h1>\r\n        <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p><strong>Name:</strong>{order.user.name}</p>\r\n                    <p><strong>Email:</strong>\r\n                    <a href={`mailto:${order.user.email}`}> {order.user.email}</a></p>\r\n                    <p>\r\n                        <strong>Address:</strong>\r\n                        {order.shippingAddress.address},{order.shippingAddress.city}{\" \"},{order.shippingAddress.postalCode}{\" \"},{order.shippingAddress.country}\r\n                    </p>\r\n                    {order.isDelivered ? <Message>Delivered on {order.deliveredAt}</Message> : <Message variant=\"danger\">Not Delivered</Message>}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment</h2>\r\n                    <p>\r\n                        <strong>Payment Method:</strong>\r\n                        {order.paymentMethod}\r\n                    </p>\r\n                    {order.isPaid? <Message variant=\"success\">Paid on{order.paidAt}</Message>:<Message variant=\"warning\">Not Paid</Message>}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Cart</h2>\r\n                    <ListGroup variant=\"flush\">\r\n                        {order.orderItems.map((item,index)=>(\r\n                        <ListGroup.Item key={index}>\r\n                            <Row>\r\n                            <Col md={2}>    \r\n                                <Image src={item.image} fluid rounded/>\r\n                            </Col>\r\n                            <Col >\r\n                                <Link to={`product/${item.product}`}>\r\n                                    {item.name}\r\n                                </Link>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                                {item.qty} x ${item.price}= ${item.qty*item.price}   \r\n                            </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>))}\r\n                    </ListGroup>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n            <ListGroup>\r\n                <ListGroup.Item>\r\n                    <h2>Order summary</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                <Row>\r\n                    <Col >Items:</Col>\r\n                    <Col>${cart.itemsprice}</Col>\r\n                </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                <Row>\r\n                    <Col >Shipping:</Col>\r\n                    <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                <Row>\r\n                    <Col >Tax:</Col>\r\n                    <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                <Row>\r\n                    <Col >Total:</Col>\r\n                    <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n                </ListGroup.Item>\r\n                {!order.isPaid && \r\n                <ListGroup.Item>\r\n                    {loadingPay && <Loader/>}\r\n                    {!sdkReady? \" \" :(\r\n                        <PayPalButton amount={`${order.totalPrice}`}   onSuccess={successHandler} />\r\n                    )}\r\n                </ListGroup.Item>\r\n                    }\r\n                    {error && \r\n                        <ListGroup.Item>\r\n                        <Message variant=\"danger\">{error}</Message>\r\n                        </ListGroup.Item>\r\n                    }\r\n                \r\n            </ListGroup>\r\n        </Col>\r\n    </Row>\r\n        </>\r\n    \r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\alias\\MERN\\frontend\\src\\test.js",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":15,"nodeType":"166","messageId":"167","endLine":1,"endColumn":23},{"ruleId":"168","severity":1,"message":"169","line":19,"column":8,"nodeType":"170","endLine":19,"endColumn":28,"suggestions":"171"},{"ruleId":"164","severity":1,"message":"172","line":4,"column":5,"nodeType":"166","messageId":"167","endLine":4,"endColumn":30},{"ruleId":"164","severity":1,"message":"173","line":9,"column":8,"nodeType":"166","messageId":"167","endLine":9,"endColumn":13},{"ruleId":"164","severity":1,"message":"172","line":5,"column":34,"nodeType":"166","messageId":"167","endLine":5,"endColumn":59},{"ruleId":"164","severity":1,"message":"174","line":18,"column":11,"nodeType":"166","messageId":"167","endLine":18,"endColumn":19},{"ruleId":"164","severity":1,"message":"165","line":1,"column":26,"nodeType":"166","messageId":"167","endLine":1,"endColumn":34},{"ruleId":"164","severity":1,"message":"175","line":6,"column":8,"nodeType":"166","messageId":"167","endLine":6,"endColumn":21},{"ruleId":"168","severity":1,"message":"176","line":18,"column":8,"nodeType":"170","endLine":18,"endColumn":25,"suggestions":"177"},{"ruleId":"164","severity":1,"message":"178","line":20,"column":11,"nodeType":"166","messageId":"167","endLine":20,"endColumn":19},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["181"],"'USER_UPDATE_PROFILE_RESET' is defined but never used.","'axios' is defined but never used.","'redirect' is assigned a value but never used.","'FormContainer' is defined but never used.","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["182"],"'userInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [dispatch, id, match, qty]",{"range":"187","text":"188"},"Update the dependencies array to be: [history, order._id, success]",{"range":"189","text":"190"},[763,783],"[dispatch, id, match, qty]",[786,803],"[history, order._id, success]"]